import json

def get_final_solution(file_path: str) -> dict:
    """
    Parses a JSON file from the agent system to find the best solution.

    Args:
        file_path: The path to the solutions.json file.

    Returns:
        A dictionary containing the chosen solution.
    """
    # Open and load the JSON data from the file
    with open(file_path, 'r') as f:
        all_solutions = json.load(f)

    # all_solutions is a list of dicts
    for solution in all_solutions:
        if solution.get("status") == "solved" and solution.get("team") != "Rescue_Team":
            print(f"✅ Found a solved solution from '{solution.get('team')}'.")
            return solution

    # If the loop finishes, it means no non-rescue team found a 'solved' solution
    print("⚠️ No 'solved' solution found. Falling back to the rescue team.")
    for solution in all_solutions:
        if solution.get("team") == "Rescue_Team":
            return solution

    # If no rescue team entry is found, just return the first solution as fallback
    return all_solutions[0] if all_solutions else {}

# --- How to run this script ---
if __name__ == "__main__":
    # The path to the JSON file generated by your agent system
    json_file = 'solutions.json'

    # Get the chosen solution
    final_answer = get_final_solution(json_file)

    # Print the result beautifully
    print("\n--- Final Chosen Solution ---")
    print(f"Summary: {final_answer.get('summary')}")
    print(f"Time Complexity: {final_answer.get('time_complexity')}")
    print("\n--- Code ---")
    print(final_answer.get('code'))
    print("--------------------------")